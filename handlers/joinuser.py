from aiogram.types import ChatJoinRequest
from aiogram import Bot
import os
from aiogram.types import Message
from keyboards.capcha import main_keyboards
from utils.database import Database
from aiogram.methods.approve_chat_join_request import ApproveChatJoinRequest


pending_users = {}  # –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id –ø–æ user_id

async def approve_request(event, bot: Bot):
    user_id = event.from_user.id
    chat_id = event.chat.id
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ user_id
    pending_users[user_id] = chat_id
    msg = "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç—ã–º –≤ –∫–∞–Ω–∞–ª –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫–∞–ø—á—É !"
    msg2 = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –õ—å–≤–∞"
    await bot.send_message(chat_id=user_id, text=f"{msg}\n{msg2}", reply_markup=main_keyboards)




async def approve_user(message: Message, bot: Bot):
    user_id = message.from_user.id
    chat_id = pending_users.get(user_id)

    db = Database(os.getenv('DATABASE_NAME'))
    try:
        if (message.text != "ü¶Å"):
            await bot.send_message(message.from_user.id, f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n"
                                                         f"–ù–∞–π–¥–∏—Ç–µ –ª—å–≤–∞", reply_markup=main_keyboards)
        else:
            if (message.from_user.username):
                user_name = message.from_user.username
            else:
                user_name = "Not specified"
            user_add = db.add_user(user_id, user_name)
            print(user_add)
            await bot(ApproveChatJoinRequest(chat_id=chat_id, user_id=user_id))
            await bot.send_message(message.from_user.id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É")
    except Exception as error:
            print(f"–û—à–∏–±–∫–∞ - {error}")


async def object_message(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, f' –û–±—ä–µ–∫—Ç - {message}')
