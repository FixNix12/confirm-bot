import asyncio

from aiogram.types import ChatJoinRequest, FSInputFile
from aiogram import Bot
import os
from aiogram.types import Message
from keyboards.capcha import main_keyboards
from utils.database import Database
from aiogram.methods.approve_chat_join_request import ApproveChatJoinRequest
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


async def get_channels_key(btn_text, btn_link):

    inline_keyboard = []
    btn_text = btn_text
    btn_link = btn_link
    button = InlineKeyboardButton(text=btn_text, url=btn_link)
    row = [button]
    inline_keyboard.append(row)

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

pending_users = {}  # –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id –ø–æ user_id

async def approve_request(event, bot: Bot):
    try:

        user_id = event.from_user.id
        chat_id = event.chat.id

        db = Database(os.getenv('DATABASE_NAME'))
        request_id = db.select_channel_id(chat_id)

        greeting_info = [db.select_channel_info(request_id)]
        greeting_btns = [db.select_channel_btns(request_id)]

        global text_marker
        global video_marker
        global btns_marker


        for greeting_item in greeting_info:
            if greeting_item[0]:
                greeting_text = greeting_item[0]
                text_marker = True
            else:
                greeting_text = ""
                text_marker = False

            if greeting_item[1]:
                greeting_video = greeting_item[1]
                video_marker = True
            else:
                greeting_video = ""
                video_marker = False

        for btn_item in greeting_btns:
            if btn_item[0] and btn_item[1]:
                btn_text = btn_item[0]
                btn_link = btn_item[1]

                channel_invite = await get_channels_key(btn_text, btn_link)

                btns_marker = True
            else:
                btns_marker = False


        if video_marker and text_marker:
            my_video = FSInputFile(greeting_video)
            await bot.send_video(chat_id=user_id, video=my_video, caption=greeting_text)
            await asyncio.sleep(1)
            text_marker = False
            video_marker = False

        if video_marker:
            my_video = FSInputFile(greeting_video) 
            await bot.send_video(chat_id=user_id, video=my_video)
            await asyncio.sleep(1)

        if text_marker:
            await bot.send_message(chat_id=user_id, text=f"{greeting_text}")
            await asyncio.sleep(1)


        if btns_marker:
            await bot.send_message(chat_id=user_id, text=f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã", reply_markup=channel_invite)
            await asyncio.sleep(1)



        # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ user_id
        pending_users[user_id] = chat_id
        msg = "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±—ã—Ç—å –ø—Ä–∏–Ω—è—Ç—ã–º –≤ –∫–∞–Ω–∞–ª –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫–∞–ø—á—É !"
        msg2 = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –õ—å–≤–∞"
        await bot.send_message(chat_id=user_id, text=f"{msg}\n{msg2}", reply_markup=main_keyboards)

    except Exception as error:
        with open('errors.txt', 'a') as error_file:
            error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–±—ã—Ç–∏–∏ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è –≤ –∫–∞–Ω–∞–ª - {error}\n"
            error_file.write(error_message)
            print(error_message)




async def approve_user(message: Message, bot: Bot):
    user_id = message.from_user.id
    chat_id = pending_users.get(user_id)

    print(f"{user_id}"  
          f"{chat_id}")

    db = Database(os.getenv('DATABASE_NAME'))
    try:
        if (message.text != "ü¶Å"):
            await bot.send_message(message.from_user.id, f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\n"
                                                         f"–ù–∞–π–¥–∏—Ç–µ –ª—å–≤–∞", reply_markup=main_keyboards)
        else:
            if (message.from_user.username):
                user_name = message.from_user.username
            else:
                user_name = "Not specified"
            user_add = db.add_user(user_id, user_name)
            print(user_add)
            await bot(ApproveChatJoinRequest(chat_id=chat_id, user_id=user_id))
            await bot.send_message(message.from_user.id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É")
    except Exception as error:
        with open('errors.txt', 'a') as error_file:
            error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª - {error}\n"
            error_file.write(error_message)
            print(error_message)

async def object_message(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, f' –û–±—ä–µ–∫—Ç - {message}')
